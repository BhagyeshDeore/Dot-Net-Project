@model IdentityDemo2.Models.Attempt

<div style="display: flex; flex-direction: column;">
    @{
        var problem_id = Context.Request.Query["problemId"];
    }
    <form asp-controller="Attempts" asp-action="attemptproblem_partial_" asp-route-ProblemId=@problem_id >
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
@*         <h1>Problem Id : @problem_id</h1>
 *@            <div class="form-group">
                <label asp-for="Code" class="control-label"></label>
                <textarea asp-for="Code" class="form-control" id="javaCodeEditor">
                    </textarea>

                <span asp-validation-for="Code" class="text-danger"></span>
            </div>
            
        </form>

    <div class="" style="margin-top: 10px; align-self: flex-end;">
        <input type="button" value="Submit" id="submitButton" class="btn btn-primary" onclick="callCustomMethod()" />
        <div id="loadingSpinner" style="display: none;">Loading...</div>

    </div>

    <h4 id="submissionstatus"></h4>
    <pre id="submissionoutput"></pre>

    
</div>


@* //Not Required Back to List
<div>
    <a asp-action="Index">Back to List</a>
</div> *@

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<!-- Add the link tag for the Dracula theme here 
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.63.1/theme/dracula.min.css"> -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.63.1/codemirror.min.js"></script>
<!-- Include CodeMirror Java mode -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.63.1/mode/clike/clike.min.js"></script>
<!-- Initialize CodeMirror on your input field -->
<script>
    var defaultJavaCode = 'import java.util.Scanner;\npublic class Main {\n    public static void main(String[] args) {\n           Scanner sc = new Scanner(System.in);\n        // Your default Java code here\n    }\n}';
   
    var javaCodeEditor;

    document.addEventListener("DOMContentLoaded", function () {

        var container = document.querySelector('.col-sm');
        var initialHeight = 300;  // Adjust the initial height value as needed

        javaCodeEditor = CodeMirror.fromTextArea(document.getElementById('javaCodeEditor'), {
            mode: 'text/x-java',
            theme: 'dracula', // Optional theme
            lineNumbers: true, // Show line numbers
            autofocus: true, // Automatically focus on the editor
        });

        // Set the editor height explicitly
        javaCodeEditor.setSize(null, initialHeight + 'px');
        javaCodeEditor.setValue(defaultJavaCode);

        

        // Call the function to set the height initially and whenever the window is resized
       
        window.addEventListener('resize', setEditorHeight);
    });

    // Set the height of CodeMirror to 100% of its container
    function setEditorHeight() {
        var containerHeight = document.querySelector('.col-sm').offsetHeight;
        javaCodeEditor.setSize(null, containerHeight + 'px');
    }


    function callCustomMethod() {
        var javaCode = getCodeFromEditor();
        var problemId = '@problem_id';

        document.getElementById('submitButton').disabled = true;
        document.getElementById('loadingSpinner').style.display = 'block';

        fetch(`/Attempts/AttemptSubmission?ProblemId=${problemId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ Code: javaCode })
        })
            .then(response => {
                if (response.ok) {
                    return response.json(); // Parse the JSON response
                } else {
                    throw new Error('Error calling custom method');
                }
            })
            .then(data => {
                // Update the HTML elements with the received data
                document.getElementById('submissionstatus').textContent = `Status: ${data.status}`;
                document.getElementById('submissionoutput').textContent = `Output: ${data.message}`;

                // Enable the submit button and hide loading spinner
                if (data.status != "Submitted : Sample Testcases and Hidden Testcases passed")
                    document.getElementById('submitButton').disabled = false;
                document.getElementById('loadingSpinner').style.display = 'none';
            })
            .catch(error => {
                console.error('Error:', error);

                // Enable the submit button and hide loading spinner
                document.getElementById('submitButton').disabled = false;
                document.getElementById('loadingSpinner').style.display = 'none';
            });
    }

    function getCodeFromEditor() {
        // Function to get the code from the CodeMirror editor
         // Use CodeMirror's API to get the value

        return javaCodeEditor.getValue();
    }


</script>